class MechButtons_Handler : EventHandler
{
	virtual void ProcessMechMenuEvents(ConsoleEvent e, DrivableObject veh)
	{
		// Menu events
		let mech = DrivableMech(veh);
		if(!mech) return;
		
		string menuCmd = e.Name;
		Array<String> menuArgs;
		menuCmd.Split(menuArgs, ".");
		
		uint argc = menuArgs.Size();
		if(!argc) return;
		
		if(menuArgs[0] ~== "mechlab" && argc >= 4)
		{
			if(menuArgs[1] ~== "armor")
			{
				let srcHardpoint = MechHardpoint(mech.parts[menuArgs[4].ToInt()]);
				double amt = menuArgs[5].ToInt();
				
				bool front = menuArgs[2] ~== "front";
				bool rear = menuArgs[2] ~== "rear";
				
				if(menuArgs[3] ~== "add")
					srcHardpoint.adjustArmor(front ? amt : 0, rear ? amt : 0);
				
				if(menuArgs[3] ~== "remove")
					srcHardpoint.adjustArmor(front ? -amt : 0, rear ? -amt : 0);		
			}
				
			if(menuArgs[1] ~== "item")
			{
				string indexArgs = menuArgs[3];
				Array<String> indices;
				indexArgs.Split(indices, ":");
				
				int partID = indices[0].ToInt();
				int itemID = indices[1].ToInt();
								
				if(menuArgs[2] ~== "equip") {}
				if(menuArgs[2] ~== "move") 
				{
					let srcHardpoint = MechHardpoint(mech.parts[partID]);
					let srcItem = srcHardpoint.items[itemID];
					if(!srcItem) return;
					
					int toHardpointID = menuArgs[4].toInt();
					let toHardpoint = MechHardpoint(mech.parts[toHardpointID]);
					
					if(srcItem.TryDetach())
					{
						if(!srcItem.TryAttach(toHardpoint))
							srcItem.TryAttach(srcHardpoint);
					}
				}
				if(menuArgs[2] ~== "dequip") 
				{
					let srcItem = MechHardpoint(mech.parts[partID]).items[itemID];
					if(!srcItem) return;
					
					srcItem.TryDetach();
				}
			}
		}
	}
	
	// Moar keys
	override void NetworkProcess(ConsoleEvent e)
	{
		PlayerInfo plr = players[e.Player];
		if(!plr || !plr.mo) return;
		
		let drvObj = I_DrivingObject.Get(plr.mo);
		if(drvObj && drvObj.source) 
		{
			string cmd = e.Name;
			bool btnState = cmd.IndexOf("+") != -1 ? true : false; 
			cmd.Remove(0,1);
			cmd = cmd.MakeLower();
			
			if(cmd ~== "mw_groupprev" ) drvObj.source.setExtBtn(DrivableMech.BT_GROUPPREV, btnState);
			if(cmd ~== "mw_groupnext" ) drvObj.source.setExtBtn(DrivableMech.BT_GROUPNEXT, btnState);
			if(cmd ~== "mw_weaponprev") drvObj.source.setExtBtn(DrivableMech.BT_WEAPPREV,  btnState);
			if(cmd ~== "mw_weaponnext") drvObj.source.setExtBtn(DrivableMech.BT_WEAPNEXT,  btnState);
			
			if(cmd ~== "mw_grouptoggle"   ) drvObj.source.setExtBtn(DrivableMech.BT_GROUPSET,  btnState);
			if(cmd ~== "mw_groupchainfire") drvObj.source.setExtBtn(DrivableMech.BT_GROUPCHF,  btnState);
			
			if(cmd ~== "mw_armlock"   ) drvObj.source.setExtBtn(DrivableMech.BT_ARMLOCK,    btnState);
			if(cmd ~== "mw_torsolock" ) drvObj.source.setExtBtn(DrivableMech.BT_TORSOLOCK,  btnState);
			if(cmd ~== "mw_alignlegs" ) drvObj.source.setExtBtn(DrivableMech.BT_ALIGNLEGS,  btnState);
			if(cmd ~== "mw_aligntorso") drvObj.source.setExtBtn(DrivableMech.BT_ALIGNTORSO, btnState);
			if(cmd ~== "mw_stopmech"  ) drvObj.source.setExtBtn(DrivableMech.BT_STOPMECH,   btnState);
			if(cmd ~== "mw_peekinventory") drvObj.source.setExtBtn(DrivableMech.BT_PEEKINV, btnState);
			
			if(cmd ~== "mw_gettarget")  drvObj.source.setExtBtn(DrivableMech.BT_GETTARGET, btnState);
			
			if(cmd ~== "mw_openmechlab")
			{
				console.printf("Menu?");
				Menu.SetMenu("MechMenu_Mechlab");
			}
			
			ProcessMechMenuEvents(e, drvObj.source);
		}	
	}
}